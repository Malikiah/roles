---
# - include: firewall.yaml
# - include: packages.yaml

- name: "Setting kube config localhost configuration on user {{ ansible_user_id }}"
  copy:
    dest: $HOME/.kube/config
    content: "{{ hostvars[groups['master_nodes'][0]].kube_config.stdout }}"

- name: Setting permanent environment variable for KUBECONFIG
  lineinfile:
    path: ~/.bash_profile
    line: export KUBECONFIG=$HOME/.kube/config

- name: Applying Weavenet container network interface
  shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  args:
    executable: /bin/bash

- name: Curling Helm Git repo && Installing Helm
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    dest: .

- name: Installing helm 
  shell: mv get-helm-3 get_helm.sh && source ./get_helm.sh

- name: Removing helm install artifacts
  file:
    path: get_helm.sh
    state: absent

- name: Updating helm repository
  shell: helm repo update
  args:
    executable: /bin/bash


##### Nginx Controller Deployment #####

# - name: Creating nginx-ingress namespace
#   shell: kubectl create namespace nginx-ingress
#   ignore_errors: yes

- name: Installing Nginx helm chart
  shell: helm install nginx-ingress stable/nginx-ingress --set controller.daemonset.useHostPort=true
  args:
    executable: /bin/bash
  ignore_errors: yes


##### Cert Manager Deployment #####

- name: Adding jetstack repo for helm
  shell: helm repo add jetstack https://charts.jetstack.io
  args:
    executable: /bin/bash
    
- name: Updating helm repository
  shell: helm repo update
  args:
    executable: /bin/bash

- name: Creating cert manager namespace
  shell: kubectl create namespace cert-manager
  args:
    executable: /bin/bash
  ignore_errors: yes

- name: Installing helm cert-manager
  shell: helm install cert-manager jetstack/cert-manager --namespace cert-manager --set installCRDs=true
  args:
    executable: /bin/bash
  ignore_errors: yes

- name: Creating file directory for cert-manager
  file:
    path: ./files/cert-manager/
    state: directory

- name: Creating yaml files for cert-manager
  template:
    src: templates/cert-manager/{{ item }}.j2
    dest: ./files/cert-manager/{{ item }}.yaml
  with_items:
  - prod-issuer
  - staging-issuer

  
- name: Applying issuer for cert-manager
  shell: kubectl apply -f ./files/cert-manager/{{ item }}.yaml
  args:
    executable: /bin/bash
  with_items:
  - prod-issuer
  - staging-issuer


  